
# LCD setup
lcd_columns = 16
lcd_rows = 2
i2c = board.I2C()  # uses board.SCL and board.SDA
lcd = character_lcd.Character_LCD_RGB_I2C(i2c, lcd_columns, lcd_rows)

# for RPI version 1, use “bus = smbus.SMBus(0)”
bus = smbus.SMBus(1)

# This is the address we setup in the Arduino Program
address = 0x04


def writeNumber(value):
    bus.write_byte(address, value)
    #bus.write_byte_data(address, 1, value)
    return -1

def readBlock():
    number = bus.read_i2c_block_data(address, 7, 2) # 2 is number of bytes in data, 7 is the sent offset
    # number = bus.read_byte_data(address, 0)
    return number


while True:
    try:
        actual_position_array = []
        desired_setpoint = 6 # to be returned from computer vision function
        writeNumber(desired_setpoint)  
        actual_position_array = readBlock()
        print(actual_position_array)
        lcd.clear()
        lcd.message = "target: " + str(desired_setpoint) + "\nactual: " + str(actual_position_array)

    except:
        print("I2C Error")
        lcd.clear()
        lcd.message = "I2C Error"

